<?php


/**
 * Default cache time
 */
define('FACEBOOK_PULL_CACHETIME', 1200);


/**
 * Implementation of hook_init().
 */
function facebook_pull_init() {
  drupal_add_css(drupal_get_path('module', 'facebook_pull') . '/facebook_pull.css');
}


/**
 * Implementation of hook_theme().
 */
function facebook_pull_theme($existing, $type, $theme, $path) {
  $theme = array(
    'facebook_pull_feed' => array(
      'arguments' => array('items' => array()),
      'template'  => 'facebook_pull-feed',
    ),
    'facebook_pull_notes' => array(
      'arguments' => array('feedid' => 0, 'items' => array()),
      'template'  => 'facebook_pull-notes',
    ),
  );
  return $theme;
}


/**
 * Serve up a facebook feed from the cache
 */
function facebook_pull_render($graph_id, $type, $app_id, $app_secret, $options = array()) {
  $token = _facebook_pull_accesstoken($app_id, $app_secret);
  $data = _facebook_pull_feed_cached($graph_id, $type, $token, $options);
  if (!$data) {
    return '';
  }
  return theme('facebook_pull_feed', $data);
}


/**
 * Serve up facebook notes
 */
function facebook_pull_notes($id, $key, $viewer = 0, $limit = 5) {
  $data = _facebook_pull_notes_cached($id, $key, $viewer);
  if (!$data) {
    return '';
  }
  $feed = simplexml_load_string($data);
  $entries = array();
  for ($i = 0; $i < $limit; $i++) {
    $entries[] = $feed->entry[$i];
  }
  return theme('facebook_pull_notes', $id, $entries);
}


/**
 * Pull the notes but check the cache first
 */
function _facebook_pull_notes_cached($id, $key, $viewer = 0) {
  $cache_key = sprintf("%s-%s-%s", $id, $key, $viewer);
  $cache = cache_get($cache_key);

  if (!$cache || $cache->created > time() + FACEBOOK_PULL_CACHETIME) {
    $data = _facebook_pull_notes($id, $key, $viewer);
    cache_set($cache_key, $data, 'cache', CACHE_TEMPORARY);
  } else {
    $data = $cache->data;
  }

  return $data;
}


/**
 * We need a specific way to access notes, as they are currently not available
 * due to the following bug in the facebook graph.
 *
 * http://bugs.developers.facebook.net/show_bug.cgi?id=18266
 */
function _facebook_pull_notes($id, $key, $viewer = 0) {
  $data = array('id' => $id, 'viewer' => $viewer, 'key' => $key, 'format' => 'atom10');
  $qs = http_build_query($data, '', '&');
  $url = 'http://www.facebook.com/feeds/notes.php?' . $qs;

  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_HEADER, 0);
  curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
  curl_setopt($ch, CURLOPT_USERAGENT, 'Mozilla/5.0');
  ob_start(); curl_exec($ch); $raw = ob_get_contents(); ob_end_clean(); // HBD
  curl_close($ch);

  return $raw;
}


/**
 * Pull data from a facebook feed and cache it
 */
function _facebook_pull_feed_cached($graph_id, $type, $token, $options = array()) {
  $cache_key = sprintf("%s-%s-%s", $graph_id, $type, http_build_query($options, '', '-'));
  $cache = cache_get($cache_key);

  if (!$cache || $cache->created > time() + FACEBOOK_PULL_CACHETIME) {
    $data = _facebook_pull_feed($graph_id, $type, $token, $options);
    cache_set($cache_key, $data, 'cache', CACHE_TEMPORARY);
  } else {
    $data = $cache->data;
  }

  return $data;
}


/**
 * Pull data from a facebook feed
 */
function _facebook_pull_feed($graph_id, $type, $token, $options = array()) {
  $qs = http_build_query($options, '', '&');
  $url = "https://graph.facebook.com/%s/%s?%s&%s";
  $fullurl = sprintf($url, $graph_id, $type, $token, $qs);
  $raw = file_get_contents($fullurl);
  $data = json_decode($raw);
  if (!isset($data->data)) {
    $message = 'Failed to fetch data from the Facebook Graph';
    $variables = array();
    watchdog('facebook_pull', $message, $variables, WATCHDOG_WARNING);
    return FALSE;
  }
  return $data->data;
}


/**
 * Get an access token
 */
function _facebook_pull_accesstoken($app_id, $app_secret) {
  $endpoint = 'https://graph.facebook.com/oauth/access_token?client_id=%s&client_secret=%s&grant_type=client_credentials';

  $fullurl = sprintf($endpoint, $app_id, $app_secret);
  $token = file_get_contents($fullurl);
  if (!$token) {
    $message = 'Failed to fetch data from the Facebook Graph';
    $variables = array();
    watchdog('facebook_pull', $message, $variables, WATCHDOG_WARNING);
    return FALSE;
  }

  return $token;
}
